# GitHub Actions workflow for deploying React/TypeScript portfolio to GitHub Pages
name: Deploy Portfolio to GitHub Pages

# Trigger workflow on push to main branch and manual dispatch
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Set permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      # Checkout repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Setup Node.js environment
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      # Install dependencies
      - name: Install Dependencies
        run: |
          npm ci --prefer-offline --no-audit
          npm audit fix --audit-level moderate
      
      # Lint code (if linting is configured)
      - name: Lint Code
        run: |
          if npm run lint --if-present; then
            echo "Linting completed successfully"
          else
            echo "No lint script found, skipping..."
          fi
        continue-on-error: true
      
      # Run tests (if tests are configured)
      - name: Run Tests
        run: |
          if npm run test --if-present; then
            echo "Tests completed successfully"
          else
            echo "No test script found, skipping..."
          fi
        continue-on-error: true
      
      # Build the application
      - name: Build Application
        run: |
          npm run build
        env:
          CI: true
          NODE_ENV: production
      
      # Verify build output
      - name: Verify Build Output
        run: |
          if [ -d "dist" ]; then
            echo "Build successful - dist directory created"
            ls -la dist/
          else
            echo "Build failed - no dist directory found"
            exit 1
          fi
      
      # Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: matrix.node-version == '20.x'
      
      # Upload build artifacts for deployment
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        if: matrix.node-version == '20.x'
        with:
          path: './dist'
  
  # Deploy job (only runs after successful build)
  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000
          error_count: 10
          reporting_interval: 2000
      
      # Verify deployment
      - name: Verify Deployment
        run: |
          echo "Portfolio deployed successfully!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
      
      # Health check (optional)
      - name: Health Check
        run: |
          sleep 30
          curl -f ${{ steps.deployment.outputs.page_url }} || exit 1
        continue-on-error: true

  # Cleanup job (runs regardless of success/failure)
  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
      - name: Cleanup Workflow
        run: |
          echo "Cleaning up workflow artifacts..."
          echo "Deployment process completed"
